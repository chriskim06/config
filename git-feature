#!/usr/bin/env bash

#
# git-feature
#

_get_jira_ticket_for_description () {
  ticket=$(curl -s -u $USERNAME:$PASSWORD $JIRA_URL$1)
  summary=$(printf "%s" "$ticket" | jq -M -r '.fields.summary')
  [[ ! -z "$summary" ]] && git config branch.$1.description "$summary"
}

if [[ $# -ne 1 ]]; then
  printf "Usage:  git feature <ticket_id>\n\tThis script uses \$USERNAME, \$PASSWORD, and \$JIRA_URL environment variables\n"
elif [[ -z "$(type -t jq)" ]]; then
  printf "This script requires jq to be installed in order to parse the JSON response from JIRA.\n"
elif [[ -z "$USERNAME" || -z "$PASSWORD" || -z "$JIRA_URL" ]]; then
  printf "Must export \$USERNAME, \$PASSWORD, and \$JIRA_URL environment variables.\n"
else
  if [[ ! -z "$(git branch --all | grep $1)" ]]; then
    if [[ -z "$(git config branch.$1.description)" ]]; then
      read -e -r -p "$1 already exists but has no description. Try to get its JIRA summary? [y/n]: " choice && printf "\n"
      if [[ "$choice" =~ ^y|Y ]]; then
        _get_jira_ticket_for_description "$1"
      fi
    else
      printf "$1 has already been created and has a description.\n"
    fi
  else
    git checkout -b "$1" origin/master
    git push -u origin "$1"
    _get_jira_ticket_for_description "$1"
  fi
  [[ ! -z "$(type -p 'git-branches')" ]] && git branches
fi
